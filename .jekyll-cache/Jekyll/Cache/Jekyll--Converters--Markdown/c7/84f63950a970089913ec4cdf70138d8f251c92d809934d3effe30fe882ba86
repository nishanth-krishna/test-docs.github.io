I"¥<h1 id="index-management-security">Index management security</h1>

<p>Using the security plugin with index management lets you limit non-admin users to certain actions. For example, you might want to set up your security such that a group of users can only read ISM policies, while others can create, delete, or change policies.</p>

<p>All index management data are protected as system indices, and only a super admin or an admin with a Transport Layer Security (TLS) certificate can access system indices. For more information, see <a href="http://localhost:4000/docs/latest/security/configuration/system-indices">System indices</a>.</p>

<h2 id="basic-permissions">Basic permissions</h2>

<p>The security plugin comes with one role that offers full access to index management: <code class="language-plaintext highlighter-rouge">index_management_full_access</code>. For a description of the roleâ€™s permissions, see <a href="http://localhost:4000/docs/latest/security/access-control/users-roles#predefined-roles">Predefined roles</a>.</p>

<p>With security enabled, users not only need the correct index management permissions, but they also need permissions to execute actions to involved indices. For example, if a user wants to use the REST API to attach a policy that executes a rollup job to an index named <code class="language-plaintext highlighter-rouge">system-logs</code>, they would need the permissions to attach a policy and execute a rollup job, as well as access to <code class="language-plaintext highlighter-rouge">system-logs</code>.</p>

<p>Finally, with the exceptions of Create Policy, Get Policy, and Delete Policy, users also need the <code class="language-plaintext highlighter-rouge">indices:admin/opensearch/ism/managedindex</code> permission to execute <a href="http://localhost:4000/docs/latest/im-plugin/ism/api">ISM APIs</a>.</p>

<h2 id="advanced-limit-access-by-backend-role">(Advanced) Limit access by backend role</h2>

<p>You can use backend roles to configure fine-grained access to index management policies and actions. For example, users of different departments in an organization might view different policies depending on what roles and permissions they are assigned.</p>

<p>First, ensure your users have the appropriate <a href="http://localhost:4000/docs/latest/security/access-control/index/">backend roles</a>. Backend roles usually come from an <a href="http://localhost:4000/docs/latest/security/configuration/ldap/">LDAP server</a> or <a href="http://localhost:4000/docs/latest/security/configuration/saml/">SAML provider</a>. However, if you use the internal user database, you can use the REST API to <a href="http://localhost:4000/docs/latest/security/access-control/api#create-user">add them manually</a>.</p>

<p>Use the REST API to enable the following setting:</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">PUT</span><span class="w"> </span><span class="err">_cluster/settings</span><span class="w">
</span><span class="p">{</span><span class="w">
  </span><span class="nl">"transient"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"plugins.index_management.filter_by_backend_roles"</span><span class="p">:</span><span class="w"> </span><span class="s2">"true"</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p>With security enabled, only users who share at least one backend role can see and execute the policies and actions relevant to their roles.</p>

<p>For example, consider a scenario with three users: <code class="language-plaintext highlighter-rouge">John</code> and <code class="language-plaintext highlighter-rouge">Jill</code>, who have the backend role <code class="language-plaintext highlighter-rouge">helpdesk_staff</code>, and <code class="language-plaintext highlighter-rouge">Jane</code>, who has the backend role <code class="language-plaintext highlighter-rouge">phone_operator</code>. <code class="language-plaintext highlighter-rouge">John</code> wants to create a policy that performs a rollup job on an index named <code class="language-plaintext highlighter-rouge">airline_data</code>, so <code class="language-plaintext highlighter-rouge">John</code> would need a backend role that has permissions to access that index, create relevant policies, and execute relevant actions, and <code class="language-plaintext highlighter-rouge">Jill</code> would be able to access the same index, policy, and job. However, <code class="language-plaintext highlighter-rouge">Jane</code> cannot access or edit those resources or actions.</p>
:ET